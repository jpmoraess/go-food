version: '3.7'

services:
  # POSTGRES
  postgres:
    image: debezium/example-postgres
    container_name: postgres
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "max_replication_slots=4"
    #volumes:
      #- "./volumes/postgres:/var/lib/postgresql/data"
    environment:
      - "POSTGRES_USER=backend"
      - "POSTGRES_PASSWORD=backend"
    networks:
      - ${GLOBAL_NETWORK:-postgres}


  # ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:${KAFKA_VERSION:-latest}
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    networks:
      - ${GLOBAL_NETWORK:-kafka}


  # KAFKA BROKERS
  kafka-broker-1:
    image: confluentinc/cp-kafka:${KAFKA_VERSION:-latest}
    hostname: kafka-broker-1
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,LISTENER_LOCAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_COMPRESSION_TYPE: producer
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-broker-2:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    hostname: kafka-broker-2
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_COMPRESSION_TYPE: producer
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-broker-3:
    image: confluentinc/cp-kafka:${KAFKA_VERSION:-latest}
    hostname: kafka-broker-3
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,LISTENER_LOCAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_COMPRESSION_TYPE: producer
    networks:
      - ${GLOBAL_NETWORK:-kafka}


  # DEBEZIUM CONNECTOR
  kafka-debezium-connector:
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: "connect-config"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      BOOTSTRAP_SERVERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092
      LOGGING_LEVEL: "DEBUG"
      CONNECT_SCHEMA_NAME_ADJUSTMENT_MODE: none
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: false
      VALUE_CONVERTER_SCHEMAS_ENABLE: false
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    volumes:
      - "C://debezium-connector-schema-registry-7.6.0:/kafka/connect/debezium-connector-schemaregistry-7.6.0"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092
    networks:
      - ${GLOBAL_NETWORK:-kafka}


  # INIT KAFKA
  init-kafka:
    image: confluentinc/cp-kafka:${KAFKA_VERSION:-latest}
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # block until kafka is reachable
      kafka-topics --bootstrap-server kafka-broker-1:9092 --list
      
      echo -e 'Deleting kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic debezium.order.payment_outbox --delete --if-exists
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --create --if-not-exists --topic debezium.order.payment_outbox --replication-factor 3 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --list
      "

networks:
  go-food:
    driver: bridge